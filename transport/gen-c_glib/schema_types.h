/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SCHEMA_TYPES_H
#define SCHEMA_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* custom thrift includes */

/* begin types */

enum _Crud_operation_TRANSPORT {
  CRUD_OPERATION__T_R_A_N_S_P_O_R_T_CRUD_GET = 0,
  CRUD_OPERATION__T_R_A_N_S_P_O_R_T_CRUD_REMOVE = 1,
  CRUD_OPERATION__T_R_A_N_S_P_O_R_T_CRUD_NEW = 2,
  CRUD_OPERATION__T_R_A_N_S_P_O_R_T_CRUD_UPDATE = 3
};
typedef enum _Crud_operation_TRANSPORT Crud_operation_TRANSPORT;

/* return the name of the constant */
const char *
toString_Crud_operation_TRANSPORT(int value); 

enum _Condition_code_TRANSPORT {
  CONDITION_CODE__T_R_A_N_S_P_O_R_T_OP_EQUAL = 0,
  CONDITION_CODE__T_R_A_N_S_P_O_R_T_OP_GREATER = 1,
  CONDITION_CODE__T_R_A_N_S_P_O_R_T_OP_LESS = 2,
  CONDITION_CODE__T_R_A_N_S_P_O_R_T_OP_NOT_GREATER = 3,
  CONDITION_CODE__T_R_A_N_S_P_O_R_T_OP_NOT_LESS = 4,
  CONDITION_CODE__T_R_A_N_S_P_O_R_T_OP_SUBSTR = 5
};
typedef enum _Condition_code_TRANSPORT Condition_code_TRANSPORT;

/* return the name of the constant */
const char *
toString_Condition_code_TRANSPORT(int value); 

enum _Logic_op_TRANSPORT {
  LOGIC_OP__T_R_A_N_S_P_O_R_T_OP_AND = 0,
  LOGIC_OP__T_R_A_N_S_P_O_R_T_OP_OR = 1,
  LOGIC_OP__T_R_A_N_S_P_O_R_T_OP_NOT = 2
};
typedef enum _Logic_op_TRANSPORT Logic_op_TRANSPORT;

/* return the name of the constant */
const char *
toString_Logic_op_TRANSPORT(int value); 

enum _Type_TRANSPORT {
  TYPE__T_R_A_N_S_P_O_R_T_STRING_TYPE = 0,
  TYPE__T_R_A_N_S_P_O_R_T_INTEGER_TYPE = 1,
  TYPE__T_R_A_N_S_P_O_R_T_BOOLEAN_TYPE = 2
};
typedef enum _Type_TRANSPORT Type_TRANSPORT;

/* return the name of the constant */
const char *
toString_Type_TRANSPORT(int value); 

/* struct Value_union_TRANSPORT */
struct _Value_union_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gint32 Integer;
  gboolean __isset_Integer;
  gboolean Boolean;
  gboolean __isset_Boolean;
  gchar * String;
  gboolean __isset_String;
};
typedef struct _Value_union_TRANSPORT Value_union_TRANSPORT;

struct _Value_union_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Value_union_TRANSPORTClass Value_union_TRANSPORTClass;

GType value_union__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_VALUE_UNION__T_R_A_N_S_P_O_R_T (value_union__t_r_a_n_s_p_o_r_t_get_type())
#define VALUE_UNION__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_VALUE_UNION__T_R_A_N_S_P_O_R_T, Value_union_TRANSPORT))
#define VALUE_UNION__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_VALUE_UNION__T_R_A_N_S_P_O_R_T, Value_union_TRANSPORTClass))
#define IS_VALUE_UNION__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_VALUE_UNION__T_R_A_N_S_P_O_R_T))
#define IS_VALUE_UNION__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_VALUE_UNION__T_R_A_N_S_P_O_R_T))
#define VALUE_UNION__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_VALUE_UNION__T_R_A_N_S_P_O_R_T, Value_union_TRANSPORTClass))

/* struct Value_TRANSPORT */
struct _Value_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  Type_TRANSPORT type;
  gboolean __isset_type;
  Value_union_TRANSPORT * value;
  gboolean __isset_value;
};
typedef struct _Value_TRANSPORT Value_TRANSPORT;

struct _Value_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Value_TRANSPORTClass Value_TRANSPORTClass;

GType value__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_VALUE__T_R_A_N_S_P_O_R_T (value__t_r_a_n_s_p_o_r_t_get_type())
#define VALUE__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_VALUE__T_R_A_N_S_P_O_R_T, Value_TRANSPORT))
#define VALUE__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_VALUE__T_R_A_N_S_P_O_R_T, Value_TRANSPORTClass))
#define IS_VALUE__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_VALUE__T_R_A_N_S_P_O_R_T))
#define IS_VALUE__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_VALUE__T_R_A_N_S_P_O_R_T))
#define VALUE__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_VALUE__T_R_A_N_S_P_O_R_T, Value_TRANSPORTClass))

/* struct Native_filter_TRANSPORT */
struct _Native_filter_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  Condition_code_TRANSPORT opcode;
  gboolean __isset_opcode;
  Value_TRANSPORT * value;
  gboolean __isset_value;
};
typedef struct _Native_filter_TRANSPORT Native_filter_TRANSPORT;

struct _Native_filter_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Native_filter_TRANSPORTClass Native_filter_TRANSPORTClass;

GType native_filter__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_NATIVE_FILTER__T_R_A_N_S_P_O_R_T (native_filter__t_r_a_n_s_p_o_r_t_get_type())
#define NATIVE_FILTER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NATIVE_FILTER__T_R_A_N_S_P_O_R_T, Native_filter_TRANSPORT))
#define NATIVE_FILTER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NATIVE_FILTER__T_R_A_N_S_P_O_R_T, Native_filter_TRANSPORTClass))
#define IS_NATIVE_FILTER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NATIVE_FILTER__T_R_A_N_S_P_O_R_T))
#define IS_NATIVE_FILTER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NATIVE_FILTER__T_R_A_N_S_P_O_R_T))
#define NATIVE_FILTER__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NATIVE_FILTER__T_R_A_N_S_P_O_R_T, Native_filter_TRANSPORTClass))

/* struct Logic_func_TRANSPORT */
struct _Logic_func_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  Logic_op_TRANSPORT type;
  gboolean __isset_type;
  GPtrArray * filters;
  gboolean __isset_filters;
};
typedef struct _Logic_func_TRANSPORT Logic_func_TRANSPORT;

struct _Logic_func_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Logic_func_TRANSPORTClass Logic_func_TRANSPORTClass;

GType logic_func__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_LOGIC_FUNC__T_R_A_N_S_P_O_R_T (logic_func__t_r_a_n_s_p_o_r_t_get_type())
#define LOGIC_FUNC__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LOGIC_FUNC__T_R_A_N_S_P_O_R_T, Logic_func_TRANSPORT))
#define LOGIC_FUNC__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_LOGIC_FUNC__T_R_A_N_S_P_O_R_T, Logic_func_TRANSPORTClass))
#define IS_LOGIC_FUNC__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LOGIC_FUNC__T_R_A_N_S_P_O_R_T))
#define IS_LOGIC_FUNC__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_LOGIC_FUNC__T_R_A_N_S_P_O_R_T))
#define LOGIC_FUNC__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LOGIC_FUNC__T_R_A_N_S_P_O_R_T, Logic_func_TRANSPORTClass))

/* struct Filter_union_TRANSPORT */
struct _Filter_union_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  Logic_func_TRANSPORT * func;
  gboolean __isset_func;
  Native_filter_TRANSPORT * filter;
  gboolean __isset_filter;
};
typedef struct _Filter_union_TRANSPORT Filter_union_TRANSPORT;

struct _Filter_union_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Filter_union_TRANSPORTClass Filter_union_TRANSPORTClass;

GType filter_union__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_FILTER_UNION__T_R_A_N_S_P_O_R_T (filter_union__t_r_a_n_s_p_o_r_t_get_type())
#define FILTER_UNION__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_FILTER_UNION__T_R_A_N_S_P_O_R_T, Filter_union_TRANSPORT))
#define FILTER_UNION__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_FILTER_UNION__T_R_A_N_S_P_O_R_T, Filter_union_TRANSPORTClass))
#define IS_FILTER_UNION__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_FILTER_UNION__T_R_A_N_S_P_O_R_T))
#define IS_FILTER_UNION__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_FILTER_UNION__T_R_A_N_S_P_O_R_T))
#define FILTER_UNION__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_FILTER_UNION__T_R_A_N_S_P_O_R_T, Filter_union_TRANSPORTClass))

/* struct Filter_TRANSPORT */
struct _Filter_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gint8 is_native;
  gboolean __isset_is_native;
  Filter_union_TRANSPORT * filter;
  gboolean __isset_filter;
};
typedef struct _Filter_TRANSPORT Filter_TRANSPORT;

struct _Filter_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Filter_TRANSPORTClass Filter_TRANSPORTClass;

GType filter__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_FILTER__T_R_A_N_S_P_O_R_T (filter__t_r_a_n_s_p_o_r_t_get_type())
#define FILTER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_FILTER__T_R_A_N_S_P_O_R_T, Filter_TRANSPORT))
#define FILTER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_FILTER__T_R_A_N_S_P_O_R_T, Filter_TRANSPORTClass))
#define IS_FILTER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_FILTER__T_R_A_N_S_P_O_R_T))
#define IS_FILTER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_FILTER__T_R_A_N_S_P_O_R_T))
#define FILTER__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_FILTER__T_R_A_N_S_P_O_R_T, Filter_TRANSPORTClass))

/* struct Native_field_TRANSPORT */
struct _Native_field_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  Value_TRANSPORT * value;
  gboolean __isset_value;
};
typedef struct _Native_field_TRANSPORT Native_field_TRANSPORT;

struct _Native_field_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Native_field_TRANSPORTClass Native_field_TRANSPORTClass;

GType native_field__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_NATIVE_FIELD__T_R_A_N_S_P_O_R_T (native_field__t_r_a_n_s_p_o_r_t_get_type())
#define NATIVE_FIELD__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NATIVE_FIELD__T_R_A_N_S_P_O_R_T, Native_field_TRANSPORT))
#define NATIVE_FIELD__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NATIVE_FIELD__T_R_A_N_S_P_O_R_T, Native_field_TRANSPORTClass))
#define IS_NATIVE_FIELD__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NATIVE_FIELD__T_R_A_N_S_P_O_R_T))
#define IS_NATIVE_FIELD__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NATIVE_FIELD__T_R_A_N_S_P_O_R_T))
#define NATIVE_FIELD__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NATIVE_FIELD__T_R_A_N_S_P_O_R_T, Native_field_TRANSPORTClass))

/* struct Header_TRANSPORT */
struct _Header_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gchar * tag;
  gboolean __isset_tag;
  gint8 filter_not_null;
  gboolean __isset_filter_not_null;
  Filter_TRANSPORT * filter;
  gboolean __isset_filter;
};
typedef struct _Header_TRANSPORT Header_TRANSPORT;

struct _Header_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Header_TRANSPORTClass Header_TRANSPORTClass;

GType header__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_HEADER__T_R_A_N_S_P_O_R_T (header__t_r_a_n_s_p_o_r_t_get_type())
#define HEADER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_HEADER__T_R_A_N_S_P_O_R_T, Header_TRANSPORT))
#define HEADER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_HEADER__T_R_A_N_S_P_O_R_T, Header_TRANSPORTClass))
#define IS_HEADER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_HEADER__T_R_A_N_S_P_O_R_T))
#define IS_HEADER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_HEADER__T_R_A_N_S_P_O_R_T))
#define HEADER__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_HEADER__T_R_A_N_S_P_O_R_T, Header_TRANSPORTClass))

/* struct Related_node_TRANSPORT */
struct _Related_node_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  Header_TRANSPORT * header;
  gboolean __isset_header;
  GPtrArray * field_names;
  gboolean __isset_field_names;
};
typedef struct _Related_node_TRANSPORT Related_node_TRANSPORT;

struct _Related_node_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Related_node_TRANSPORTClass Related_node_TRANSPORTClass;

GType related_node__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_RELATED_NODE__T_R_A_N_S_P_O_R_T (related_node__t_r_a_n_s_p_o_r_t_get_type())
#define RELATED_NODE__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RELATED_NODE__T_R_A_N_S_P_O_R_T, Related_node_TRANSPORT))
#define RELATED_NODE__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_RELATED_NODE__T_R_A_N_S_P_O_R_T, Related_node_TRANSPORTClass))
#define IS_RELATED_NODE__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RELATED_NODE__T_R_A_N_S_P_O_R_T))
#define IS_RELATED_NODE__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_RELATED_NODE__T_R_A_N_S_P_O_R_T))
#define RELATED_NODE__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RELATED_NODE__T_R_A_N_S_P_O_R_T, Related_node_TRANSPORTClass))

/* struct Request_TRANSPORT */
struct _Request_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  Crud_operation_TRANSPORT operation;
  gboolean __isset_operation;
  Header_TRANSPORT * header;
  gboolean __isset_header;
  gint64 fields_count;
  gboolean __isset_fields_count;
  GPtrArray * fields;
  gboolean __isset_fields;
  gint64 rels_count;
  gboolean __isset_rels_count;
  GPtrArray * related_nodes;
  gboolean __isset_related_nodes;
};
typedef struct _Request_TRANSPORT Request_TRANSPORT;

struct _Request_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Request_TRANSPORTClass Request_TRANSPORTClass;

GType request__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_REQUEST__T_R_A_N_S_P_O_R_T (request__t_r_a_n_s_p_o_r_t_get_type())
#define REQUEST__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REQUEST__T_R_A_N_S_P_O_R_T, Request_TRANSPORT))
#define REQUEST__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_REQUEST__T_R_A_N_S_P_O_R_T, Request_TRANSPORTClass))
#define IS_REQUEST__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REQUEST__T_R_A_N_S_P_O_R_T))
#define IS_REQUEST__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REQUEST__T_R_A_N_S_P_O_R_T))
#define REQUEST__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REQUEST__T_R_A_N_S_P_O_R_T, Request_TRANSPORTClass))

/* struct Node_TRANSPORT */
struct _Node_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gchar * tag_name;
  gboolean __isset_tag_name;
  GPtrArray * fields;
  gboolean __isset_fields;
  GPtrArray * related_node_ids;
  gboolean __isset_related_node_ids;
};
typedef struct _Node_TRANSPORT Node_TRANSPORT;

struct _Node_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Node_TRANSPORTClass Node_TRANSPORTClass;

GType node__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_NODE__T_R_A_N_S_P_O_R_T (node__t_r_a_n_s_p_o_r_t_get_type())
#define NODE__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NODE__T_R_A_N_S_P_O_R_T, Node_TRANSPORT))
#define NODE__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NODE__T_R_A_N_S_P_O_R_T, Node_TRANSPORTClass))
#define IS_NODE__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NODE__T_R_A_N_S_P_O_R_T))
#define IS_NODE__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NODE__T_R_A_N_S_P_O_R_T))
#define NODE__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NODE__T_R_A_N_S_P_O_R_T, Node_TRANSPORTClass))

/* struct Answer_TRANSPORT */
struct _Answer_TRANSPORT
{ 
  ThriftStruct parent; 

  /* public */
  gint16 code;
  gboolean __isset_code;
  gchar * error_message;
  gboolean __isset_error_message;
  GPtrArray * nodes;
  gboolean __isset_nodes;
};
typedef struct _Answer_TRANSPORT Answer_TRANSPORT;

struct _Answer_TRANSPORTClass
{
  ThriftStructClass parent;
};
typedef struct _Answer_TRANSPORTClass Answer_TRANSPORTClass;

GType answer__t_r_a_n_s_p_o_r_t_get_type (void);
#define TYPE_ANSWER__T_R_A_N_S_P_O_R_T (answer__t_r_a_n_s_p_o_r_t_get_type())
#define ANSWER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ANSWER__T_R_A_N_S_P_O_R_T, Answer_TRANSPORT))
#define ANSWER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_ANSWER__T_R_A_N_S_P_O_R_T, Answer_TRANSPORTClass))
#define IS_ANSWER__T_R_A_N_S_P_O_R_T(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ANSWER__T_R_A_N_S_P_O_R_T))
#define IS_ANSWER__T_R_A_N_S_P_O_R_T_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_ANSWER__T_R_A_N_S_P_O_R_T))
#define ANSWER__T_R_A_N_S_P_O_R_T_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ANSWER__T_R_A_N_S_P_O_R_T, Answer_TRANSPORTClass))

/* constants */

/* struct DBRequestPingArgs */
struct _DBRequestPingArgs
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _DBRequestPingArgs DBRequestPingArgs;

struct _DBRequestPingArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DBRequestPingArgsClass DBRequestPingArgsClass;

GType d_b_request_ping_args_get_type (void);
#define TYPE_D_B_REQUEST_PING_ARGS (d_b_request_ping_args_get_type())
#define D_B_REQUEST_PING_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_D_B_REQUEST_PING_ARGS, DBRequestPingArgs))
#define D_B_REQUEST_PING_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_D_B_REQUEST_PING_ARGS, DBRequestPingArgsClass))
#define IS_D_B_REQUEST_PING_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_D_B_REQUEST_PING_ARGS))
#define IS_D_B_REQUEST_PING_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_D_B_REQUEST_PING_ARGS))
#define D_B_REQUEST_PING_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_D_B_REQUEST_PING_ARGS, DBRequestPingArgsClass))

/* struct DBRequestPingResult */
struct _DBRequestPingResult
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _DBRequestPingResult DBRequestPingResult;

struct _DBRequestPingResultClass
{
  ThriftStructClass parent;
};
typedef struct _DBRequestPingResultClass DBRequestPingResultClass;

GType d_b_request_ping_result_get_type (void);
#define TYPE_D_B_REQUEST_PING_RESULT (d_b_request_ping_result_get_type())
#define D_B_REQUEST_PING_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_D_B_REQUEST_PING_RESULT, DBRequestPingResult))
#define D_B_REQUEST_PING_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_D_B_REQUEST_PING_RESULT, DBRequestPingResultClass))
#define IS_D_B_REQUEST_PING_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_D_B_REQUEST_PING_RESULT))
#define IS_D_B_REQUEST_PING_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_D_B_REQUEST_PING_RESULT))
#define D_B_REQUEST_PING_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_D_B_REQUEST_PING_RESULT, DBRequestPingResultClass))

/* struct DBRequestDoRequestArgs */
struct _DBRequestDoRequestArgs
{ 
  ThriftStruct parent; 

  /* public */
  Request_TRANSPORT * req;
  gboolean __isset_req;
};
typedef struct _DBRequestDoRequestArgs DBRequestDoRequestArgs;

struct _DBRequestDoRequestArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DBRequestDoRequestArgsClass DBRequestDoRequestArgsClass;

GType d_b_request_do_request_args_get_type (void);
#define TYPE_D_B_REQUEST_DO_REQUEST_ARGS (d_b_request_do_request_args_get_type())
#define D_B_REQUEST_DO_REQUEST_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_D_B_REQUEST_DO_REQUEST_ARGS, DBRequestDoRequestArgs))
#define D_B_REQUEST_DO_REQUEST_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_D_B_REQUEST_DO_REQUEST_ARGS, DBRequestDoRequestArgsClass))
#define IS_D_B_REQUEST_DO_REQUEST_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_D_B_REQUEST_DO_REQUEST_ARGS))
#define IS_D_B_REQUEST_DO_REQUEST_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_D_B_REQUEST_DO_REQUEST_ARGS))
#define D_B_REQUEST_DO_REQUEST_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_D_B_REQUEST_DO_REQUEST_ARGS, DBRequestDoRequestArgsClass))

/* struct DBRequestDoRequestResult */
struct _DBRequestDoRequestResult
{ 
  ThriftStruct parent; 

  /* public */
  Answer_TRANSPORT * success;
  gboolean __isset_success;
};
typedef struct _DBRequestDoRequestResult DBRequestDoRequestResult;

struct _DBRequestDoRequestResultClass
{
  ThriftStructClass parent;
};
typedef struct _DBRequestDoRequestResultClass DBRequestDoRequestResultClass;

GType d_b_request_do_request_result_get_type (void);
#define TYPE_D_B_REQUEST_DO_REQUEST_RESULT (d_b_request_do_request_result_get_type())
#define D_B_REQUEST_DO_REQUEST_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_D_B_REQUEST_DO_REQUEST_RESULT, DBRequestDoRequestResult))
#define D_B_REQUEST_DO_REQUEST_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_D_B_REQUEST_DO_REQUEST_RESULT, DBRequestDoRequestResultClass))
#define IS_D_B_REQUEST_DO_REQUEST_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_D_B_REQUEST_DO_REQUEST_RESULT))
#define IS_D_B_REQUEST_DO_REQUEST_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_D_B_REQUEST_DO_REQUEST_RESULT))
#define D_B_REQUEST_DO_REQUEST_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_D_B_REQUEST_DO_REQUEST_RESULT, DBRequestDoRequestResultClass))

#endif /* SCHEMA_TYPES_H */
